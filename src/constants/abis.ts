export const tokenWrapperABI = [
  {
    inputs: [
      { internalType: 'string', name: 'name', type: 'string' },
      { internalType: 'string', name: 'symbol', type: 'string' },
      { internalType: 'uint8', name: '__decimals', type: 'uint8' },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'owner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'spender', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'value', type: 'uint256' },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'from', type: 'address' },
      { indexed: true, internalType: 'address', name: 'to', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'value', type: 'uint256' },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DOMAIN_SEPARATOR',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'DOMAIN_TYPEHASH',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'PERMIT_TYPEHASH',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'VERSION',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'owner', type: 'address' },
      { internalType: 'address', name: 'spender', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'spender', type: 'address' },
      { internalType: 'uint256', name: 'amount', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeAddress',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'account', type: 'address' },
      { internalType: 'uint256', name: 'value', type: 'uint256' },
    ],
    name: 'burn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [{ internalType: 'uint8', name: '', type: 'uint8' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'spender', type: 'address' },
      { internalType: 'uint256', name: 'subtractedValue', type: 'uint256' },
    ],
    name: 'decreaseAllowance',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'deploymentChainId',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'spender', type: 'address' },
      { internalType: 'uint256', name: 'addedValue', type: 'uint256' },
    ],
    name: 'increaseAllowance',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'to', type: 'address' },
      { internalType: 'uint256', name: 'value', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '', type: 'address' }],
    name: 'nonces',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'owner', type: 'address' },
      { internalType: 'address', name: 'spender', type: 'address' },
      { internalType: 'uint256', name: 'value', type: 'uint256' },
      { internalType: 'uint256', name: 'deadline', type: 'uint256' },
      { internalType: 'uint8', name: 'v', type: 'uint8' },
      { internalType: 'bytes32', name: 'r', type: 'bytes32' },
      { internalType: 'bytes32', name: 's', type: 'bytes32' },
    ],
    name: 'permit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'to', type: 'address' },
      { internalType: 'uint256', name: 'amount', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'from', type: 'address' },
      { internalType: 'address', name: 'to', type: 'address' },
      { internalType: 'uint256', name: 'amount', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

export const zkEVMABI = [
  {
    inputs: [
      { internalType: 'contract IPolygonZkEVMGlobalExitRoot', name: '_globalExitRootManager', type: 'address' },
      { internalType: 'contract IERC20Upgradeable', name: '_matic', type: 'address' },
      { internalType: 'contract IVerifierRollup', name: '_rollupVerifier', type: 'address' },
      { internalType: 'contract IPolygonZkEVMBridge', name: '_bridgeAddress', type: 'address' },
      { internalType: 'uint64', name: '_chainID', type: 'uint64' },
      { internalType: 'uint64', name: '_forkID', type: 'uint64' },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  { inputs: [], name: 'BatchAlreadyVerified', type: 'error' },
  { inputs: [], name: 'BatchNotSequencedOrNotSequenceEnd', type: 'error' },
  { inputs: [], name: 'ExceedMaxVerifyBatches', type: 'error' },
  { inputs: [], name: 'FinalNumBatchBelowLastVerifiedBatch', type: 'error' },
  { inputs: [], name: 'FinalNumBatchDoesNotMatchPendingState', type: 'error' },
  { inputs: [], name: 'FinalPendingStateNumInvalid', type: 'error' },
  { inputs: [], name: 'ForceBatchNotAllowed', type: 'error' },
  { inputs: [], name: 'ForceBatchTimeoutNotExpired', type: 'error' },
  { inputs: [], name: 'ForceBatchesAlreadyActive', type: 'error' },
  { inputs: [], name: 'ForceBatchesOverflow', type: 'error' },
  { inputs: [], name: 'ForcedDataDoesNotMatch', type: 'error' },
  { inputs: [], name: 'GlobalExitRootNotExist', type: 'error' },
  { inputs: [], name: 'HaltTimeoutNotExpired', type: 'error' },
  { inputs: [], name: 'InitNumBatchAboveLastVerifiedBatch', type: 'error' },
  { inputs: [], name: 'InitNumBatchDoesNotMatchPendingState', type: 'error' },
  { inputs: [], name: 'InvalidProof', type: 'error' },
  { inputs: [], name: 'InvalidRangeBatchTimeTarget', type: 'error' },
  { inputs: [], name: 'InvalidRangeForceBatchTimeout', type: 'error' },
  { inputs: [], name: 'InvalidRangeMultiplierBatchFee', type: 'error' },
  { inputs: [], name: 'NewAccInputHashDoesNotExist', type: 'error' },
  { inputs: [], name: 'NewPendingStateTimeoutMustBeLower', type: 'error' },
  { inputs: [], name: 'NewStateRootNotInsidePrime', type: 'error' },
  { inputs: [], name: 'NewTrustedAggregatorTimeoutMustBeLower', type: 'error' },
  { inputs: [], name: 'NotEnoughMaticAmount', type: 'error' },
  { inputs: [], name: 'OldAccInputHashDoesNotExist', type: 'error' },
  { inputs: [], name: 'OldStateRootDoesNotExist', type: 'error' },
  { inputs: [], name: 'OnlyAdmin', type: 'error' },
  { inputs: [], name: 'OnlyEmergencyState', type: 'error' },
  { inputs: [], name: 'OnlyNotEmergencyState', type: 'error' },
  { inputs: [], name: 'OnlyPendingAdmin', type: 'error' },
  { inputs: [], name: 'OnlyTrustedAggregator', type: 'error' },
  { inputs: [], name: 'OnlyTrustedSequencer', type: 'error' },
  { inputs: [], name: 'PendingStateDoesNotExist', type: 'error' },
  { inputs: [], name: 'PendingStateInvalid', type: 'error' },
  { inputs: [], name: 'PendingStateNotConsolidable', type: 'error' },
  { inputs: [], name: 'PendingStateTimeoutExceedHaltAggregationTimeout', type: 'error' },
  { inputs: [], name: 'SequenceZeroBatches', type: 'error' },
  { inputs: [], name: 'SequencedTimestampBelowForcedTimestamp', type: 'error' },
  { inputs: [], name: 'SequencedTimestampInvalid', type: 'error' },
  { inputs: [], name: 'StoredRootMustBeDifferentThanNewRoot', type: 'error' },
  { inputs: [], name: 'TransactionsLengthAboveMax', type: 'error' },
  { inputs: [], name: 'TrustedAggregatorTimeoutExceedHaltAggregationTimeout', type: 'error' },
  { inputs: [], name: 'TrustedAggregatorTimeoutNotExpired', type: 'error' },
  { inputs: [], name: 'VersionAlreadyUpdated', type: 'error' },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'address', name: 'newAdmin', type: 'address' }],
    name: 'AcceptAdminRole',
    type: 'event',
  },
  { anonymous: false, inputs: [], name: 'ActivateForceBatches', type: 'event' },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'uint64', name: 'numBatch', type: 'uint64' },
      { indexed: false, internalType: 'bytes32', name: 'stateRoot', type: 'bytes32' },
      { indexed: true, internalType: 'uint64', name: 'pendingStateNum', type: 'uint64' },
    ],
    name: 'ConsolidatePendingState',
    type: 'event',
  },
  { anonymous: false, inputs: [], name: 'EmergencyStateActivated', type: 'event' },
  { anonymous: false, inputs: [], name: 'EmergencyStateDeactivated', type: 'event' },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'uint64', name: 'forceBatchNum', type: 'uint64' },
      { indexed: false, internalType: 'bytes32', name: 'lastGlobalExitRoot', type: 'bytes32' },
      { indexed: false, internalType: 'address', name: 'sequencer', type: 'address' },
      { indexed: false, internalType: 'bytes', name: 'transactions', type: 'bytes' },
    ],
    name: 'ForceBatch',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint8', name: 'version', type: 'uint8' }],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'uint64', name: 'numBatch', type: 'uint64' },
      { indexed: false, internalType: 'bytes32', name: 'stateRoot', type: 'bytes32' },
      { indexed: true, internalType: 'address', name: 'aggregator', type: 'address' },
    ],
    name: 'OverridePendingState',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'bytes32', name: 'storedStateRoot', type: 'bytes32' },
      { indexed: false, internalType: 'bytes32', name: 'provedStateRoot', type: 'bytes32' },
    ],
    name: 'ProveNonDeterministicPendingState',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: true, internalType: 'uint64', name: 'numBatch', type: 'uint64' }],
    name: 'SequenceBatches',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: true, internalType: 'uint64', name: 'numBatch', type: 'uint64' }],
    name: 'SequenceForceBatches',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint64', name: 'newforceBatchTimeout', type: 'uint64' }],
    name: 'SetForceBatchTimeout',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint16', name: 'newMultiplierBatchFee', type: 'uint16' }],
    name: 'SetMultiplierBatchFee',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint64', name: 'newPendingStateTimeout', type: 'uint64' }],
    name: 'SetPendingStateTimeout',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'address', name: 'newTrustedAggregator', type: 'address' }],
    name: 'SetTrustedAggregator',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint64', name: 'newTrustedAggregatorTimeout', type: 'uint64' }],
    name: 'SetTrustedAggregatorTimeout',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'address', name: 'newTrustedSequencer', type: 'address' }],
    name: 'SetTrustedSequencer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'string', name: 'newTrustedSequencerURL', type: 'string' }],
    name: 'SetTrustedSequencerURL',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint64', name: 'newVerifyBatchTimeTarget', type: 'uint64' }],
    name: 'SetVerifyBatchTimeTarget',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'address', name: 'newPendingAdmin', type: 'address' }],
    name: 'TransferAdminRole',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint64', name: 'numBatch', type: 'uint64' },
      { indexed: false, internalType: 'uint64', name: 'forkID', type: 'uint64' },
      { indexed: false, internalType: 'string', name: 'version', type: 'string' },
    ],
    name: 'UpdateZkEVMVersion',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'uint64', name: 'numBatch', type: 'uint64' },
      { indexed: false, internalType: 'bytes32', name: 'stateRoot', type: 'bytes32' },
      { indexed: true, internalType: 'address', name: 'aggregator', type: 'address' },
    ],
    name: 'VerifyBatches',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'uint64', name: 'numBatch', type: 'uint64' },
      { indexed: false, internalType: 'bytes32', name: 'stateRoot', type: 'bytes32' },
      { indexed: true, internalType: 'address', name: 'aggregator', type: 'address' },
    ],
    name: 'VerifyBatchesTrustedAggregator',
    type: 'event',
  },
  { inputs: [], name: 'acceptAdminRole', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [{ internalType: 'uint64', name: 'sequencedBatchNum', type: 'uint64' }],
    name: 'activateEmergencyState',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  { inputs: [], name: 'activateForceBatches', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [],
    name: 'admin',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'batchFee',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint64', name: '', type: 'uint64' }],
    name: 'batchNumToStateRoot',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeAddress',
    outputs: [{ internalType: 'contract IPolygonZkEVMBridge', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'calculateRewardPerBatch',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'chainID',
    outputs: [{ internalType: 'uint64', name: '', type: 'uint64' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'newStateRoot', type: 'uint256' }],
    name: 'checkStateRootInsidePrime',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint64', name: 'pendingStateNum', type: 'uint64' }],
    name: 'consolidatePendingState',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  { inputs: [], name: 'deactivateEmergencyState', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [
      { internalType: 'bytes', name: 'transactions', type: 'bytes' },
      { internalType: 'uint256', name: 'maticAmount', type: 'uint256' },
    ],
    name: 'forceBatch',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'forceBatchTimeout',
    outputs: [{ internalType: 'uint64', name: '', type: 'uint64' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint64', name: '', type: 'uint64' }],
    name: 'forcedBatches',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'forkID',
    outputs: [{ internalType: 'uint64', name: '', type: 'uint64' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getForcedBatchFee',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint64', name: 'initNumBatch', type: 'uint64' },
      { internalType: 'uint64', name: 'finalNewBatch', type: 'uint64' },
      { internalType: 'bytes32', name: 'newLocalExitRoot', type: 'bytes32' },
      { internalType: 'bytes32', name: 'oldStateRoot', type: 'bytes32' },
      { internalType: 'bytes32', name: 'newStateRoot', type: 'bytes32' },
    ],
    name: 'getInputSnarkBytes',
    outputs: [{ internalType: 'bytes', name: '', type: 'bytes' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getLastVerifiedBatch',
    outputs: [{ internalType: 'uint64', name: '', type: 'uint64' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'globalExitRootManager',
    outputs: [{ internalType: 'contract IPolygonZkEVMGlobalExitRoot', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'address', name: 'admin', type: 'address' },
          { internalType: 'address', name: 'trustedSequencer', type: 'address' },
          { internalType: 'uint64', name: 'pendingStateTimeout', type: 'uint64' },
          { internalType: 'address', name: 'trustedAggregator', type: 'address' },
          { internalType: 'uint64', name: 'trustedAggregatorTimeout', type: 'uint64' },
        ],
        internalType: 'struct PolygonZkEVM.InitializePackedParameters',
        name: 'initializePackedParameters',
        type: 'tuple',
      },
      { internalType: 'bytes32', name: 'genesisRoot', type: 'bytes32' },
      { internalType: 'string', name: '_trustedSequencerURL', type: 'string' },
      { internalType: 'string', name: '_networkName', type: 'string' },
      { internalType: 'string', name: '_version', type: 'string' },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isEmergencyState',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isForcedBatchDisallowed',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint64', name: 'pendingStateNum', type: 'uint64' }],
    name: 'isPendingStateConsolidable',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastBatchSequenced',
    outputs: [{ internalType: 'uint64', name: '', type: 'uint64' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastForceBatch',
    outputs: [{ internalType: 'uint64', name: '', type: 'uint64' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastForceBatchSequenced',
    outputs: [{ internalType: 'uint64', name: '', type: 'uint64' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastPendingState',
    outputs: [{ internalType: 'uint64', name: '', type: 'uint64' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastPendingStateConsolidated',
    outputs: [{ internalType: 'uint64', name: '', type: 'uint64' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastTimestamp',
    outputs: [{ internalType: 'uint64', name: '', type: 'uint64' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastVerifiedBatch',
    outputs: [{ internalType: 'uint64', name: '', type: 'uint64' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'matic',
    outputs: [{ internalType: 'contract IERC20Upgradeable', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'multiplierBatchFee',
    outputs: [{ internalType: 'uint16', name: '', type: 'uint16' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'networkName',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint64', name: 'initPendingStateNum', type: 'uint64' },
      { internalType: 'uint64', name: 'finalPendingStateNum', type: 'uint64' },
      { internalType: 'uint64', name: 'initNumBatch', type: 'uint64' },
      { internalType: 'uint64', name: 'finalNewBatch', type: 'uint64' },
      { internalType: 'bytes32', name: 'newLocalExitRoot', type: 'bytes32' },
      { internalType: 'bytes32', name: 'newStateRoot', type: 'bytes32' },
      { internalType: 'bytes', name: 'proof', type: 'bytes' },
    ],
    name: 'overridePendingState',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pendingAdmin',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pendingStateTimeout',
    outputs: [{ internalType: 'uint64', name: '', type: 'uint64' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    name: 'pendingStateTransitions',
    outputs: [
      { internalType: 'uint64', name: 'timestamp', type: 'uint64' },
      { internalType: 'uint64', name: 'lastVerifiedBatch', type: 'uint64' },
      { internalType: 'bytes32', name: 'exitRoot', type: 'bytes32' },
      { internalType: 'bytes32', name: 'stateRoot', type: 'bytes32' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint64', name: 'initPendingStateNum', type: 'uint64' },
      { internalType: 'uint64', name: 'finalPendingStateNum', type: 'uint64' },
      { internalType: 'uint64', name: 'initNumBatch', type: 'uint64' },
      { internalType: 'uint64', name: 'finalNewBatch', type: 'uint64' },
      { internalType: 'bytes32', name: 'newLocalExitRoot', type: 'bytes32' },
      { internalType: 'bytes32', name: 'newStateRoot', type: 'bytes32' },
      { internalType: 'bytes', name: 'proof', type: 'bytes' },
    ],
    name: 'proveNonDeterministicPendingState',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  { inputs: [], name: 'renounceOwnership', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [],
    name: 'rollupVerifier',
    outputs: [{ internalType: 'contract IVerifierRollup', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'bytes', name: 'transactions', type: 'bytes' },
          { internalType: 'bytes32', name: 'globalExitRoot', type: 'bytes32' },
          { internalType: 'uint64', name: 'timestamp', type: 'uint64' },
          { internalType: 'uint64', name: 'minForcedTimestamp', type: 'uint64' },
        ],
        internalType: 'struct PolygonZkEVM.BatchData[]',
        name: 'batches',
        type: 'tuple[]',
      },
      { internalType: 'address', name: 'l2Coinbase', type: 'address' },
    ],
    name: 'sequenceBatches',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'bytes', name: 'transactions', type: 'bytes' },
          { internalType: 'bytes32', name: 'globalExitRoot', type: 'bytes32' },
          { internalType: 'uint64', name: 'minForcedTimestamp', type: 'uint64' },
        ],
        internalType: 'struct PolygonZkEVM.ForcedBatchData[]',
        name: 'batches',
        type: 'tuple[]',
      },
    ],
    name: 'sequenceForceBatches',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint64', name: '', type: 'uint64' }],
    name: 'sequencedBatches',
    outputs: [
      { internalType: 'bytes32', name: 'accInputHash', type: 'bytes32' },
      { internalType: 'uint64', name: 'sequencedTimestamp', type: 'uint64' },
      { internalType: 'uint64', name: 'previousLastBatchSequenced', type: 'uint64' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint64', name: 'newforceBatchTimeout', type: 'uint64' }],
    name: 'setForceBatchTimeout',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint16', name: 'newMultiplierBatchFee', type: 'uint16' }],
    name: 'setMultiplierBatchFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint64', name: 'newPendingStateTimeout', type: 'uint64' }],
    name: 'setPendingStateTimeout',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newTrustedAggregator', type: 'address' }],
    name: 'setTrustedAggregator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint64', name: 'newTrustedAggregatorTimeout', type: 'uint64' }],
    name: 'setTrustedAggregatorTimeout',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newTrustedSequencer', type: 'address' }],
    name: 'setTrustedSequencer',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'string', name: 'newTrustedSequencerURL', type: 'string' }],
    name: 'setTrustedSequencerURL',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint64', name: 'newVerifyBatchTimeTarget', type: 'uint64' }],
    name: 'setVerifyBatchTimeTarget',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newPendingAdmin', type: 'address' }],
    name: 'transferAdminRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'trustedAggregator',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'trustedAggregatorTimeout',
    outputs: [{ internalType: 'uint64', name: '', type: 'uint64' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'trustedSequencer',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'trustedSequencerURL',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'string', name: '_versionString', type: 'string' }],
    name: 'updateVersion',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'verifyBatchTimeTarget',
    outputs: [{ internalType: 'uint64', name: '', type: 'uint64' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint64', name: 'pendingStateNum', type: 'uint64' },
      { internalType: 'uint64', name: 'initNumBatch', type: 'uint64' },
      { internalType: 'uint64', name: 'finalNewBatch', type: 'uint64' },
      { internalType: 'bytes32', name: 'newLocalExitRoot', type: 'bytes32' },
      { internalType: 'bytes32', name: 'newStateRoot', type: 'bytes32' },
      { internalType: 'bytes', name: 'proof', type: 'bytes' },
    ],
    name: 'verifyBatches',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint64', name: 'pendingStateNum', type: 'uint64' },
      { internalType: 'uint64', name: 'initNumBatch', type: 'uint64' },
      { internalType: 'uint64', name: 'finalNewBatch', type: 'uint64' },
      { internalType: 'bytes32', name: 'newLocalExitRoot', type: 'bytes32' },
      { internalType: 'bytes32', name: 'newStateRoot', type: 'bytes32' },
      { internalType: 'bytes', name: 'proof', type: 'bytes' },
    ],
    name: 'verifyBatchesTrustedAggregator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'version',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
]

export const zkEVMBridgeABI = [
  { inputs: [], name: 'AlreadyClaimed', type: 'error' },
  { inputs: [], name: 'AmountDoesNotMatchMsgValue', type: 'error' },
  { inputs: [], name: 'DestinationNetworkInvalid', type: 'error' },
  { inputs: [], name: 'EtherTransferFailed', type: 'error' },
  { inputs: [], name: 'GlobalExitRootInvalid', type: 'error' },
  { inputs: [], name: 'InvalidSmtProof', type: 'error' },
  { inputs: [], name: 'MerkleTreeFull', type: 'error' },
  { inputs: [], name: 'MessageFailed', type: 'error' },
  { inputs: [], name: 'MsgValueNotZero', type: 'error' },
  { inputs: [], name: 'NotValidAmount', type: 'error' },
  { inputs: [], name: 'NotValidOwner', type: 'error' },
  { inputs: [], name: 'NotValidSignature', type: 'error' },
  { inputs: [], name: 'NotValidSpender', type: 'error' },
  { inputs: [], name: 'OnlyEmergencyState', type: 'error' },
  { inputs: [], name: 'OnlyNotEmergencyState', type: 'error' },
  { inputs: [], name: 'OnlyPolygonZkEVM', type: 'error' },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint8', name: 'leafType', type: 'uint8' },
      { indexed: false, internalType: 'uint32', name: 'originNetwork', type: 'uint32' },
      { indexed: false, internalType: 'address', name: 'originAddress', type: 'address' },
      { indexed: false, internalType: 'uint32', name: 'destinationNetwork', type: 'uint32' },
      { indexed: false, internalType: 'address', name: 'destinationAddress', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },
      { indexed: false, internalType: 'bytes', name: 'metadata', type: 'bytes' },
      { indexed: false, internalType: 'uint32', name: 'depositCount', type: 'uint32' },
    ],
    name: 'BridgeEvent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint32', name: 'index', type: 'uint32' },
      { indexed: false, internalType: 'uint32', name: 'originNetwork', type: 'uint32' },
      { indexed: false, internalType: 'address', name: 'originAddress', type: 'address' },
      { indexed: false, internalType: 'address', name: 'destinationAddress', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },
    ],
    name: 'ClaimEvent',
    type: 'event',
  },
  { anonymous: false, inputs: [], name: 'EmergencyStateActivated', type: 'event' },
  { anonymous: false, inputs: [], name: 'EmergencyStateDeactivated', type: 'event' },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint8', name: 'version', type: 'uint8' }],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint32', name: 'originNetwork', type: 'uint32' },
      { indexed: false, internalType: 'address', name: 'originTokenAddress', type: 'address' },
      { indexed: false, internalType: 'address', name: 'wrappedTokenAddress', type: 'address' },
      { indexed: false, internalType: 'bytes', name: 'metadata', type: 'bytes' },
    ],
    name: 'NewWrappedToken',
    type: 'event',
  },
  { inputs: [], name: 'activateEmergencyState', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [
      { internalType: 'uint32', name: 'destinationNetwork', type: 'uint32' },
      { internalType: 'address', name: 'destinationAddress', type: 'address' },
      { internalType: 'uint256', name: 'amount', type: 'uint256' },
      { internalType: 'address', name: 'token', type: 'address' },
      { internalType: 'bool', name: 'forceUpdateGlobalExitRoot', type: 'bool' },
      { internalType: 'bytes', name: 'permitData', type: 'bytes' },
    ],
    name: 'bridgeAsset',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint32', name: 'destinationNetwork', type: 'uint32' },
      { internalType: 'address', name: 'destinationAddress', type: 'address' },
      { internalType: 'bool', name: 'forceUpdateGlobalExitRoot', type: 'bool' },
      { internalType: 'bytes', name: 'metadata', type: 'bytes' },
    ],
    name: 'bridgeMessage',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32[32]', name: 'smtProof', type: 'bytes32[32]' },
      { internalType: 'uint32', name: 'index', type: 'uint32' },
      { internalType: 'bytes32', name: 'mainnetExitRoot', type: 'bytes32' },
      { internalType: 'bytes32', name: 'rollupExitRoot', type: 'bytes32' },
      { internalType: 'uint32', name: 'originNetwork', type: 'uint32' },
      { internalType: 'address', name: 'originTokenAddress', type: 'address' },
      { internalType: 'uint32', name: 'destinationNetwork', type: 'uint32' },
      { internalType: 'address', name: 'destinationAddress', type: 'address' },
      { internalType: 'uint256', name: 'amount', type: 'uint256' },
      { internalType: 'bytes', name: 'metadata', type: 'bytes' },
    ],
    name: 'claimAsset',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32[32]', name: 'smtProof', type: 'bytes32[32]' },
      { internalType: 'uint32', name: 'index', type: 'uint32' },
      { internalType: 'bytes32', name: 'mainnetExitRoot', type: 'bytes32' },
      { internalType: 'bytes32', name: 'rollupExitRoot', type: 'bytes32' },
      { internalType: 'uint32', name: 'originNetwork', type: 'uint32' },
      { internalType: 'address', name: 'originAddress', type: 'address' },
      { internalType: 'uint32', name: 'destinationNetwork', type: 'uint32' },
      { internalType: 'address', name: 'destinationAddress', type: 'address' },
      { internalType: 'uint256', name: 'amount', type: 'uint256' },
      { internalType: 'bytes', name: 'metadata', type: 'bytes' },
    ],
    name: 'claimMessage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    name: 'claimedBitMap',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  { inputs: [], name: 'deactivateEmergencyState', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [],
    name: 'depositCount',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getDepositRoot',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint8', name: 'leafType', type: 'uint8' },
      { internalType: 'uint32', name: 'originNetwork', type: 'uint32' },
      { internalType: 'address', name: 'originAddress', type: 'address' },
      { internalType: 'uint32', name: 'destinationNetwork', type: 'uint32' },
      { internalType: 'address', name: 'destinationAddress', type: 'address' },
      { internalType: 'uint256', name: 'amount', type: 'uint256' },
      { internalType: 'bytes32', name: 'metadataHash', type: 'bytes32' },
    ],
    name: 'getLeafValue',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint32', name: 'originNetwork', type: 'uint32' },
      { internalType: 'address', name: 'originTokenAddress', type: 'address' },
    ],
    name: 'getTokenWrappedAddress',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'globalExitRootManager',
    outputs: [{ internalType: 'contractIBasePolygonZkEVMGlobalExitRoot', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint32', name: '_networkID', type: 'uint32' },
      { internalType: 'contractIBasePolygonZkEVMGlobalExitRoot', name: '_globalExitRootManager', type: 'address' },
      { internalType: 'address', name: '_polygonZkEVMaddress', type: 'address' },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'index', type: 'uint256' }],
    name: 'isClaimed',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isEmergencyState',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastUpdatedDepositCount',
    outputs: [{ internalType: 'uint32', name: '', type: 'uint32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'networkID',
    outputs: [{ internalType: 'uint32', name: '', type: 'uint32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'polygonZkEVMaddress',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint32', name: 'originNetwork', type: 'uint32' },
      { internalType: 'address', name: 'originTokenAddress', type: 'address' },
      { internalType: 'string', name: 'name', type: 'string' },
      { internalType: 'string', name: 'symbol', type: 'string' },
      { internalType: 'uint8', name: 'decimals', type: 'uint8' },
    ],
    name: 'precalculatedWrapperAddress',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    name: 'tokenInfoToWrappedToken',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  { inputs: [], name: 'updateGlobalExitRoot', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [
      { internalType: 'bytes32', name: 'leafHash', type: 'bytes32' },
      { internalType: 'bytes32[32]', name: 'smtProof', type: 'bytes32[32]' },
      { internalType: 'uint32', name: 'index', type: 'uint32' },
      { internalType: 'bytes32', name: 'root', type: 'bytes32' },
    ],
    name: 'verifyMerkleProof',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '', type: 'address' }],
    name: 'wrappedTokenToTokenInfo',
    outputs: [
      { internalType: 'uint32', name: 'originNetwork', type: 'uint32' },
      { internalType: 'address', name: 'originTokenAddress', type: 'address' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
]
